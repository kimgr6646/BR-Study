# 기초1

**프로그램**
- 컴퓨터는 범용적인 기계 (프로그램이라는 개념을 사용하기 때문)
- 특정한 작업을 위한 작업 지시서
- 작업을 지시하려면 명령어들을 나열해야 함

**컴퓨터**
- 프로그램(명령어들의 리스트)에 따라 데이터를 처리하는 기계
- 작업을 굉장히 빠르고 정확하게 수행하며, 몇 번을 반복해서 시켜도 불평이 없음
- 컴퓨터가 알아듣는 언어는 0과 1로 구성되어 있는 기계어로 모든 것을 0과 1로 표현하고, 이로 인해 내부 스위치 회로들이 ON/OFF 상태로 변경되면서 작업 수행

**폰노이만 구조**
- 프로그램은 메인 메모리에 저장됨
- 메인 메모리에 저장된 프로그램에서 명령어들을 순차적으로 가져와서 실행

**프로그래밍**
- 아주 자세하고 구체적으로 일을 지시해야 함

**프로그래밍 언어**
- 기계어를 사용할 순 있으나 이진수로 작성해야 하기에 매우 불편
- 자연어와 기계어 중간 쯤 위치
- 컴파일러가 프로그래밍 언어를 기계어로 통역
- 기계어 : 특정 컴퓨터의 명령어를 이진수로 표시한 것, 0과 1로 구성, 하드웨어에 종속
- 어셈블리어 : CPU의 명령어들을 영어의 약자인 기호로 표시, 기계어보다 더 높은 수준에서 프로그램 작성 가능, 기호와 CPU의 명령어가 일대일 대응
- 고급언어 : 컴퓨터의 구조나 프로세서에 무관하게, 독립적으로 프로그램을 작성할 수 있음, C C++ JAVA 등

**컴파일러**
- 인간과 컴퓨터 사이에서 통역하는 것(소프트웨어)

**C언어**
- 간결
- 효율적
- 하드웨어를 직접 제어하는 저수준의 프로그래밍도 가능하고 고수준의 프로그래밍도 가능
- 이식성이 뛰어남
- 컴퓨터 하드웨어가 어떻게 동작하는지 이해할 수 있음

**알고리즘**
- 문제를 풀기 위해 컴퓨터가 수행해야 할 단계적인 절차를 기술한 것
- 자연어, 순서도, 의사 코드
- 순서도 : 프로그램에서 논리 순서 또는 작업 순서를 그림으로 표현하는 방법
